kind: Pipeline
apiVersion: tekton.dev/v1beta1
metadata:
  name: build-webapp
spec:
  params:
    - name: git-url
      type: string
      description: git repo url
    - name: git-revision
      type: string
      description: "branch, tag, sha etc."
      default: main
    - name: git-subdir
      type: string
      description: git subdirectory
      default: ""
  workspaces:
    - name: data
    - name: maven-settings
    - name: dockerconfig
  tasks:
    - name: git-clone
      taskRef:
        name: git-clone
        kind: ClusterTask
      params:
        - name: url
          value: $(params.git-url)
        - name: revision
          value: $(params.git-revision)
        - name: subdirectory
          value: $(params.git-subdir)
      workspaces:
        - name: output
          workspace: data
    - name: maven
      taskRef:
        name: maven
        kind: ClusterTask
      runAfter:
        - git-clone
      params:
        - name: CONTEXT_DIR
          value: webapp
        - name: GOALS
          value:
            - --batch-mode
            - clean
            - package
      workspaces:
        - name: source
          workspace: data
        - name: maven-settings
          workspace: maven-settings
    - name: copy-artifacts
      taskRef:
        name: bash
      runAfter:
        - maven
      params:
        - name: SCRIPT
          value: |
            #!/bin/bash
            cp /workspace/source/webapp/target/webapp*.war /workspace/source/ROOT.war
      workspaces:
        - name: source
          workspace: data
    - name: build-image
      taskRef:
        name: buildah
        kind: ClusterTask
      runAfter:
        - copy-artifacts
      params:
        - name: IMAGE
          value: quay.io/sdavies/tomcat-demo
        - name: DOCKERFILE
          value: Dockerfile
        - name: STORAGE_DRIVER
          value: "vfs --log-level=debug"
        - name: SKIP_PUSH
          value: 'false'
      workspaces:
        - name: source
          workspace: data
        - name: dockerconfig
          workspace: dockerconfig
    - name: debug
      taskRef:
        name: bash
      runAfter:
        - copy-artifacts
      params:
        - name: SCRIPT
          value: |
            #!/bin/bash
            ls /workspace/source/webapp/target
            ls /workspace/source
      workspaces:
        - name: source
          workspace: data
